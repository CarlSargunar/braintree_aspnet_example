<div class="wrapper">
    <div class="checkout container">

        <header>
            <h1>Hi, <br>Let's test a transaction with the Hosted Fields provider.</h1>
        </header>
        <br/>
        <br/>
        <form id="payment-form" method="post" action="/hosted">
            

            <div class="row">
                <label for="amount">
                    <span class="input-label">Amount</span>
                    <div class="input-wrapper amount-wrapper">
                        <input id="amount" name="amount" type="tel" min="1" placeholder="Amount" value="10">
                    </div>
                </label>
            </div>

            <div class="row">
                <div class="col-sm-6 mb-3">
                    <label for="cc-number input-label">Credit card number</label>

                    <div class="form-control input-wrapper" id="cc-number"></div>
                    <div class="invalid-feedback">
                        Credit card number is required
                    </div>
                </div>
                <div class="col-sm-3 mb-3">
                    <label for="cc-expiration input-label">Expiration</label>
                    <div class="form-control input-wrapper" id="cc-expiration"></div>
                    <div class="invalid-feedback">
                        Expiration date required
                    </div>
                </div>
                <div class="col-sm-3 mb-3">
                    <label for="cc-expiration input-label">CVV</label>
                    <div class="form-control input-wrapper" id="cc-cvv"></div>
                    <div class="invalid-feedback">
                        Security code required
                    </div>
                </div>
            </div>

            <input type="hidden" name="payment_method_nonce" id="payment_method_nonce" />
            <button value="submit" id="submit-button" class="btn btn-success btn-lg center-block" disabled="disabled">
                Pay
            </button>
        </form>

    </div>
</div>

<script src="https://js.braintreegateway.com/web/3.82.0/js/client.min.js"></script>
<script src="https://js.braintreegateway.com/web/3.82.0/js/hosted-fields.min.js"></script>

<script>
    var client_token = "@ViewBag.ClientToken";
    var form = document.querySelector('#payment-form');
    var nonce = document.querySelector('#payment_method_nonce');
    var submitButton = document.querySelector('#submit-button');

    console.log("Hosted Fields sample", braintree);
    console.log("submitButton", submitButton);

    braintree.client.create(
        { authorization: client_token },
        function (clientError, clientInstance) {
            if (clientError) {
                console.error("Client Error",clientError);
                return;
            }

            var options = {
                client: clientInstance,
                styles: {
                    'input': {
                        'font-size': '14px'
                    },
                    'input.invalid': {
                        'color': 'red'
                    },
                    'input.valid': {
                        'color': 'green'
                    }
                },
                fields: {
                    number: {
                        selector: '#cc-number',
                        placeholder: '4111 1111 1111 1111'
                    },
                    cvv: {
                        selector: '#cc-cvv',
                        placeholder: '123'
                    },
                    expirationDate: {
                        selector: '#cc-expiration',
                        placeholder: 'MM / YY'
                    }
                }
            };

            braintree.hostedFields.create(options, function(hostedFieldsError, hostedFieldsInstance) {
                if (hostedFieldsError) {
                    console.error("Hosted Error", hostedFieldsError);
                    return;
                }
                console.log("Ready");

                submitButton.removeAttribute('disabled');

                form.addEventListener('submit', function (event) {

                    event.preventDefault();
                    let state = hostedFieldsInstance.getState();
                    let formIsInvalid = false;

                    // Loop through the Hosted Fields and check
                    // for validity
                    Object.keys(state.fields).forEach(function(field) {
                        if (!state.fields[field].isValid) {
                            console.log("Invalid Container", state.fields[field].container);
                            formIsInvalid = true;
                        }
                    });

                    if (formIsInvalid) {
                        console.log("Invalid Form");
                        return;
                    }

                    hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
                        if (tokenizeErr) {
                            console.error("Tokenize Error", tokenizeErr);
                            console.error("Payload", payload);
                            console.error("State", hostedFieldsInstance.getState());
                            return;
                        }

                        console.log("Nonce", payload.nonce);
                        nonce.value = payload.nonce;
                        form.submit();
                    });
                }, false);
            });
        });


</script>